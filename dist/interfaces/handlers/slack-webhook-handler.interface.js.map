{"version":3,"sources":["../../../src/interfaces/handlers/slack-webhook-handler.interface.ts"],"names":["ISlackWebhookHandler"],"mappings":";;;;;;;;;;;;;AAuDiBA;AAAA,CAAV,CAAUA,qBAAV,KAAA;AAIE,EAAMA,qBAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,sBAAsB,CAAA;AAAA,CAJnC,EAAAA,4BAAA,KAAAA,4BAAA,GAAA,EAAA,CAAA,CAAA","file":"slack-webhook-handler.interface.js","sourcesContent":["import type { IHttpHandler } from './http-handler.interface'\n\n/**\n * ISlackWebhookHandler defines the contract for Slack webhook handlers.\n * It provides methods for handling log records via Slack webhooks.\n */\nexport interface ISlackWebhookHandler extends IHttpHandler {\n  /**\n   * Get the Slack channel to send log records to\n   */\n  getChannel(): string\n\n  /**\n   * Set the Slack channel to send log records to\n   * @param channel The Slack channel\n   */\n  setChannel(channel: string): void\n\n  /**\n   * Get the username to use when sending log records\n   */\n  getUsername(): string\n\n  /**\n   * Set the username to use when sending log records\n   * @param username The username\n   */\n  setUsername(username: string): void\n\n  /**\n   * Get the emoji to use as the icon when sending log records\n   */\n  getIconEmoji(): string\n\n  /**\n   * Set the emoji to use as the icon when sending log records\n   * @param emoji The emoji\n   */\n  setIconEmoji(emoji: string): void\n\n  /**\n   * Enable or disable emoji support in log messages\n   * @param enabled Whether emoji support is enabled\n   */\n  setEmojiSupport(enabled: boolean): void\n\n  /**\n   * Get whether emoji support is enabled in log messages\n   */\n  isEmojiSupportEnabled(): boolean\n}\n\n/**\n * Namespace containing symbols for dependency injection\n */\nexport namespace ISlackWebhookHandler {\n  /**\n   * Symbol for injecting the Slack webhook handler\n   */\n  export const $ = Symbol.for('ISlackWebhookHandler')\n}\n"]}