{"version":3,"sources":["../../../src/interfaces/handlers/http-handler.interface.ts"],"names":["IHttpHandler"],"mappings":";;;;;;;;;;;AAuDiB,IAAA;AAAA,CAAV,CAAUA,aAAV,KAAA;AAIE,EAAMA,aAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,cAAc,CAAA;AAAA,CAJ3B,EAAA,YAAA,KAAA,YAAA,GAAA,EAAA,CAAA,CAAA","file":"http-handler.interface.mjs","sourcesContent":["import type { ILogHandler } from './log-handler.interface'\n\n/**\n * IHttpHandler defines the contract for HTTP handlers.\n * It provides methods for handling log records via HTTP requests.\n */\nexport interface IHttpHandler extends ILogHandler {\n  /**\n   * Get the URL to send log records to\n   */\n  getUrl(): string\n\n  /**\n   * Set the URL to send log records to\n   * @param url The URL\n   */\n  setUrl(url: string): void\n\n  /**\n   * Get the HTTP method to use\n   */\n  getMethod(): string\n\n  /**\n   * Set the HTTP method to use\n   * @param method The HTTP method\n   */\n  setMethod(method: string): void\n\n  /**\n   * Get the HTTP headers to include in requests\n   */\n  getHeaders(): Record<string, string>\n\n  /**\n   * Set the HTTP headers to include in requests\n   * @param headers The HTTP headers\n   */\n  setHeaders(headers: Record<string, string>): void\n\n  /**\n   * Get the maximum number of retry attempts\n   */\n  getMaxRetries(): number\n\n  /**\n   * Set the maximum number of retry attempts\n   * @param maxRetries The maximum number of retry attempts\n   */\n  setMaxRetries(maxRetries: number): void\n}\n\n/**\n * Namespace containing symbols for dependency injection\n */\nexport namespace IHttpHandler {\n  /**\n   * Symbol for injecting the HTTP handler\n   */\n  export const $ = Symbol.for('IHttpHandler')\n}\n"]}