{"version":3,"sources":["../../../src/interfaces/handlers/local-storage-handler.interface.ts"],"names":["ILocalStorageHandler"],"mappings":";;;;;;;;;;;;;AA2CiBA;AAAA,CAAV,CAAUA,qBAAV,KAAA;AAIE,EAAMA,qBAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,sBAAsB,CAAA;AAAA,CAJnC,EAAAA,4BAAA,KAAAA,4BAAA,GAAA,EAAA,CAAA,CAAA","file":"local-storage-handler.interface.js","sourcesContent":["import type { ILogHandler } from './log-handler.interface'\n\n/**\n * ILocalStorageHandler defines the contract for localStorage handlers.\n * It provides methods for handling log records in the browser's localStorage.\n */\nexport interface ILocalStorageHandler extends ILogHandler {\n  /**\n   * Get the localStorage key used to store logs\n   */\n  getKey(): string\n\n  /**\n   * Set the localStorage key used to store logs\n   * @param key The localStorage key\n   */\n  setKey(key: string): void\n\n  /**\n   * Get the maximum number of log entries to store\n   */\n  getMaxEntries(): number\n\n  /**\n   * Set the maximum number of log entries to store\n   * @param maxEntries The maximum number of log entries\n   */\n  setMaxEntries(maxEntries: number): void\n\n  /**\n   * Get all stored log entries\n   */\n  getEntries(): any[]\n\n  /**\n   * Clear all stored log entries\n   */\n  clearEntries(): void\n}\n\n/**\n * Namespace containing symbols for dependency injection\n */\nexport namespace ILocalStorageHandler {\n  /**\n   * Symbol for injecting the localStorage handler\n   */\n  export const $ = Symbol.for('ILocalStorageHandler')\n}\n"]}