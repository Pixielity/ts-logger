{"version":3,"sources":["../../../src/interfaces/handlers/syslog-handler.interface.ts"],"names":["ISyslogHandler"],"mappings":";;;;;;;;;;;AA4CiB,IAAA;AAAA,CAAV,CAAUA,eAAV,KAAA;AAIE,EAAMA,eAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,gBAAgB,CAAA;AAAA,CAJ7B,EAAA,cAAA,KAAA,cAAA,GAAA,EAAA,CAAA,CAAA","file":"syslog-handler.interface.mjs","sourcesContent":["import type { ILogHandler } from './log-handler.interface'\n\n/**\n * ISyslogHandler defines the contract for syslog handlers.\n * It provides methods for handling log records in syslog format (browser-compatible).\n */\nexport interface ISyslogHandler extends ILogHandler {\n  /**\n   * Get the facility code\n   */\n  getFacility(): number\n\n  /**\n   * Set the facility code\n   * @param facility The facility code\n   */\n  setFacility(facility: number): void\n\n  /**\n   * Get the application name\n   */\n  getAppName(): string\n\n  /**\n   * Set the application name\n   * @param appName The application name\n   */\n  setAppName(appName: string): void\n\n  /**\n   * Get the process ID\n   */\n  getProcId(): string\n\n  /**\n   * Set the process ID\n   * @param procId The process ID\n   */\n  setProcId(procId: string): void\n}\n\n/**\n * Namespace containing symbols for dependency injection\n */\nexport namespace ISyslogHandler {\n  /**\n   * Symbol for injecting the syslog handler\n   */\n  export const $ = Symbol.for('ISyslogHandler')\n}\n"]}