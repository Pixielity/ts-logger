{"version":3,"sources":["../../../src/interfaces/processors/log-processor.interface.ts"],"names":["ILogProcessor"],"mappings":";;;;;;;;;;;AAsBiB,IAAA;AAAA,CAAV,CAAUA,cAAV,KAAA;AAIE,EAAMA,cAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,eAAe,CAAA;AAAA,CAJ5B,EAAA,aAAA,KAAA,aAAA,GAAA,EAAA,CAAA,CAAA","file":"log-processor.interface.mjs","sourcesContent":["import type { LogRecord } from '../../types/types'\n\n/**\n * ILogProcessor defines the contract for log processors.\n * It provides methods for processing log records.\n */\nexport interface ILogProcessor {\n  /**\n   * Process a log record\n   * @param record The log record to process\n   */\n  process(record: LogRecord): LogRecord\n\n  /**\n   * Get the processor name\n   */\n  getName(): string\n}\n\n/**\n * Namespace containing symbols for dependency injection\n */\nexport namespace ILogProcessor {\n  /**\n   * Symbol for injecting the log processor\n   */\n  export const $ = Symbol.for('ILogProcessor')\n}\n"]}