{"version":3,"sources":["../../../src/interfaces/events/log-event.interface.ts"],"names":["ILogEvent"],"mappings":";;;;;;;;;;;;;AAwBiBA;AAAA,CAAV,CAAUA,UAAV,KAAA;AAIE,EAAMA,UAAA,CAAA,CAAA,GAAI,MAAO,CAAA,GAAA,CAAI,WAAW,CAAA;AAAA,CAJxB,EAAAA,iBAAA,KAAAA,iBAAA,GAAA,EAAA,CAAA,CAAA","file":"log-event.interface.js","sourcesContent":["/**\n * ILogEvent defines the contract for log events.\n * It provides methods for identifying and handling log events.\n */\nexport interface ILogEvent {\n  /**\n   * Get the event name\n   */\n  getName(): string\n\n  /**\n   * Get the event data\n   */\n  getData(): Record<string, any>\n\n  /**\n   * Get the event timestamp\n   */\n  getTimestamp(): Date\n}\n\n/**\n * Namespace containing symbols for dependency injection\n */\nexport namespace ILogEvent {\n  /**\n   * Symbol for injecting the log event\n   */\n  export const $ = Symbol.for('ILogEvent')\n}\n"]}