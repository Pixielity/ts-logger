{"version":3,"sources":["../../src/utils/date.ts"],"names":[],"mappings":";;;;;;;;;;;AAOO,SAAS,mBAAA,CAAoB,QAAoB,YAA+B,EAAA;AACrF,EAAA,QAAQ,MAAQ;AAAA,IACd,KAAA,SAAA;AACE,MAAO,OAAA,0BAAA;AAAA,IACT,KAAA,SAAA;AACE,MAAO,OAAA,sBAAA;AAAA,IACT,KAAA,SAAA;AACE,MAAO,OAAA,8BAAA;AAAA,IACT,KAAA,MAAA;AACE,MAAO,OAAA,GAAA;AAAA,IACT,KAAA,YAAA;AACE,MAAO,OAAA,YAAA;AAAA,IACT,KAAA,qBAAA;AACE,MAAO,OAAA,qBAAA;AAAA,IACT,KAAA,YAAA;AACE,MAAO,OAAA,YAAA;AAAA,IACT,KAAA,YAAA;AACE,MAAO,OAAA,YAAA;AAAA,IACT,KAAA,UAAA;AACE,MAAO,OAAA,UAAA;AAAA,IACT,KAAA,QAAA;AACE,MAAA,OAAO,YAAgB,IAAA,qBAAA;AAAA,IACzB;AACE,MAAO,OAAA,qBAAA;AAAA;AAEb;AAQO,SAAS,UAAA,CAAW,IAAY,EAAA,MAAA,EAAoB,YAA+B,EAAA;AACxF,EAAM,MAAA,YAAA,GAAe,mBAAoB,CAAA,MAAA,EAAQ,YAAY,CAAA;AAI7D,EAAM,MAAA,IAAA,GAAO,KAAK,WAAY,EAAA;AAC9B,EAAM,MAAA,KAAA,GAAQ,OAAO,IAAK,CAAA,QAAA,KAAa,CAAC,CAAA,CAAE,QAAS,CAAA,CAAA,EAAG,GAAG,CAAA;AACzD,EAAM,MAAA,GAAA,GAAM,OAAO,IAAK,CAAA,OAAA,EAAS,CAAE,CAAA,QAAA,CAAS,GAAG,GAAG,CAAA;AAClD,EAAM,MAAA,KAAA,GAAQ,OAAO,IAAK,CAAA,QAAA,EAAU,CAAE,CAAA,QAAA,CAAS,GAAG,GAAG,CAAA;AACrD,EAAM,MAAA,OAAA,GAAU,OAAO,IAAK,CAAA,UAAA,EAAY,CAAE,CAAA,QAAA,CAAS,GAAG,GAAG,CAAA;AACzD,EAAM,MAAA,OAAA,GAAU,OAAO,IAAK,CAAA,UAAA,EAAY,CAAE,CAAA,QAAA,CAAS,GAAG,GAAG,CAAA;AACzD,EAAM,MAAA,YAAA,GAAe,OAAO,IAAK,CAAA,eAAA,EAAiB,CAAE,CAAA,QAAA,CAAS,GAAG,GAAG,CAAA;AAGnE,EAAA,IAAI,MAA4B,KAAA,MAAA,aAAA;AAC9B,IAAA,OAAO,KAAK,KAAM,CAAA,IAAA,CAAK,SAAY,GAAA,GAAI,EAAE,QAAS,EAAA;AAAA;AAIpD,EAAA,OAAO,YACJ,CAAA,OAAA,CAAQ,MAAQ,EAAA,MAAA,CAAO,IAAI,CAAC,CAC5B,CAAA,OAAA,CAAQ,IAAM,EAAA,KAAK,CACnB,CAAA,OAAA,CAAQ,IAAM,EAAA,GAAG,CACjB,CAAA,OAAA,CAAQ,IAAM,EAAA,KAAK,CACnB,CAAA,OAAA,CAAQ,IAAM,EAAA,OAAO,CACrB,CAAA,OAAA,CAAQ,IAAM,EAAA,OAAO,CACrB,CAAA,OAAA,CAAQ,OAAO,YAAY,CAAA;AAChC","file":"date.mjs","sourcesContent":["import { DateFormat } from '../enums'\n\n/**\n * Get the date format string for a DateFormat enum value\n * @param format The DateFormat enum value\n * @param customFormat The custom format string (if format is DateFormat.CUSTOM)\n */\nexport function getDateFormatString(format: DateFormat, customFormat?: string): string {\n  switch (format) {\n    case DateFormat.ISO8601:\n      return 'YYYY-MM-DDTHH:mm:ss.SSSZ'\n    case DateFormat.RFC3339:\n      return 'YYYY-MM-DDTHH:mm:ssZ'\n    case DateFormat.RFC2822:\n      return 'ddd, DD MMM YYYY HH:mm:ss ZZ'\n    case DateFormat.UNIX:\n      return 'X'\n    case DateFormat.YYYY_MM_DD:\n      return 'YYYY-MM-DD'\n    case DateFormat.YYYY_MM_DD_HH_MM_SS:\n      return 'YYYY-MM-DD HH:mm:ss'\n    case DateFormat.DD_MM_YYYY:\n      return 'DD/MM/YYYY'\n    case DateFormat.MM_DD_YYYY:\n      return 'MM/DD/YYYY'\n    case DateFormat.HH_MM_SS:\n      return 'HH:mm:ss'\n    case DateFormat.CUSTOM:\n      return customFormat || 'YYYY-MM-DD HH:mm:ss'\n    default:\n      return 'YYYY-MM-DD HH:mm:ss'\n  }\n}\n\n/**\n * Format a date according to a DateFormat enum value\n * @param date The date to format\n * @param format The DateFormat enum value\n * @param customFormat The custom format string (if format is DateFormat.CUSTOM)\n */\nexport function formatDate(date: Date, format: DateFormat, customFormat?: string): string {\n  const formatString = getDateFormatString(format, customFormat)\n\n  // Simple date formatting based on the format string\n  // In a real implementation, you might use a library like date-fns\n  const year = date.getFullYear()\n  const month = String(date.getMonth() + 1).padStart(2, '0')\n  const day = String(date.getDate()).padStart(2, '0')\n  const hours = String(date.getHours()).padStart(2, '0')\n  const minutes = String(date.getMinutes()).padStart(2, '0')\n  const seconds = String(date.getSeconds()).padStart(2, '0')\n  const milliseconds = String(date.getMilliseconds()).padStart(3, '0')\n\n  // Handle special cases\n  if (format === DateFormat.UNIX) {\n    return Math.floor(date.getTime() / 1000).toString()\n  }\n\n  // Replace tokens in the format string\n  return formatString\n    .replace('YYYY', String(year))\n    .replace('MM', month)\n    .replace('DD', day)\n    .replace('HH', hours)\n    .replace('mm', minutes)\n    .replace('ss', seconds)\n    .replace('SSS', milliseconds)\n}\n"]}